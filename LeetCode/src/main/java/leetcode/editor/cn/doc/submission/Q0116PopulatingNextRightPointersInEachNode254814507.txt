/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/

class Solution {
    public Node connect(Node root) {
        if (root == null){
            return null;
        }
        travse(root.left,root.right);
        return root;
    }
    //连接 传入的 两个节点
    private void travse(Node left, Node right) {
        if (left == null || right == null){
            return;
        }

        left.next = right;

        travse(left.left,left.right);
        travse(right.left,right.right);
        travse(left.right,right.left);
    }
}
//runtime:2 ms
//memory:38.6 MB
