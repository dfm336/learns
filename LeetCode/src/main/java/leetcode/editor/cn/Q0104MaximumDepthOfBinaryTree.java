package leetcode.editor.cn;
/**
 * @author  fengming.dai 
 * @date    2023-02-23 18:58:36 
 */
 public class Q0104MaximumDepthOfBinaryTree{
 //ÁªôÂÆö‰∏Ä‰∏™‰∫åÂèâÊ†ëÔºåÊâæÂá∫ÂÖ∂ÊúÄÂ§ßÊ∑±Â∫¶„ÄÇ 
//
// ‰∫åÂèâÊ†ëÁöÑÊ∑±Â∫¶‰∏∫Ê†πËäÇÁÇπÂà∞ÊúÄËøúÂè∂Â≠êËäÇÁÇπÁöÑÊúÄÈïøË∑ØÂæÑ‰∏äÁöÑËäÇÁÇπÊï∞„ÄÇ 
//
// ËØ¥Êòé: Âè∂Â≠êËäÇÁÇπÊòØÊåáÊ≤°ÊúâÂ≠êËäÇÁÇπÁöÑËäÇÁÇπ„ÄÇ 
//
// Á§∫‰æãÔºö ÁªôÂÆö‰∫åÂèâÊ†ë [3,9,20,null,null,15,7]Ôºå 
//
//     3
//   / \
//  9  20
//    /  \
//   15   7 
//
// ËøîÂõûÂÆÉÁöÑÊúÄÂ§ßÊ∑±Â∫¶ 3 „ÄÇ 
//
// Related TopicsÊ†ë | Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ | ÂπøÂ∫¶‰ºòÂÖàÊêúÁ¥¢ | ‰∫åÂèâÊ†ë 
//
// üëç 1513, üëé 0bug ÂèçÈ¶à | ‰ΩøÁî®ÊåáÂçó | Êõ¥Â§öÈÖçÂ•óÊèí‰ª∂ 
//
//
//
//
    
 public static void main(String[] args) {        
 	Solution solution = new Q0104MaximumDepthOfBinaryTree().new Solution();    
 }    

 //leetcode submit region begin(Prohibit modification and deletion)
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxDepth(TreeNode root) {
//        recursion(root);
        return fmax(root);
    }

    //ÂáΩÊï∞ÂÆö‰πâÔºö ËøîÂõû ‰∏ÄÊ£µÊ†ë ÁöÑ ÊúÄÊ∑±cÂ±ÇÁ∫ß
    public int fmax(TreeNode root){
        //base case
        if ( root == null ){
            return 0;
        }
        //Ëé∑ÂèñÂ∑¶Âè≥ Â≠êÊ†ë ÁöÑ ÊúÄÊ∑± + 1Ôºå ÂΩìÂâçËäÇÁÇπ ‰πüÁÆó 1 Â±Ç
        return Math.max( fmax(root.left), fmax(root.right)) + 1;
    }

    int maxDepth = 0;
    int curDepth = 0;
    public void recursion(TreeNode root){
        if ( root == null ){
            return;
        }
        //ËøõÂÖ• ËäÇÁÇπÂâç +1
        curDepth++;
        recursion(root.left);
        //Ëá≥‰∫éÂØπ res ÁöÑÊõ¥Êñ∞Ôºå‰Ω†ÊîæÂà∞Ââç‰∏≠ÂêéÂ∫è‰ΩçÁΩÆÈÉΩÂèØ‰ª•ÔºåÂè™Ë¶Å‰øùËØÅÂú®ËøõÂÖ•ËäÇÁÇπ‰πãÂêéÔºåÁ¶ªÂºÄËäÇÁÇπ‰πãÂâçÔºàÂç≥ depth Ëá™Â¢û‰πãÂêéÔºåËá™Âáè‰πãÂâçÔºâÂ∞±Ë°å‰∫Ü„ÄÇ
        if ( curDepth > maxDepth){
            maxDepth = curDepth;
        }

        recursion(root.right);

        curDepth--;
        //Á¶ªÂºÄËäÇÁÇπ Ââç -1
    }
}
//leetcode submit region end(Prohibit modification and deletion)
      public class TreeNode {
          int val;
          TreeNode left;
          TreeNode right;
          TreeNode() {}
          TreeNode(int val) { this.val = val; }
          TreeNode(int val, TreeNode left, TreeNode right) {
              this.val = val;
              this.left = left;
              this.right = right;
          }
      }
 }